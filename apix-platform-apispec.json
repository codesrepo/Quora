{
    "components": {
        "schemas": {
            "faasinput": {
                "properties": {
                    "N_DECISION_THRESHOLDS": {
                        "default": "100",
                        "description": "Number of splits on score for fairness evaluation.",
                        "title": "The N_DECISION_THRESHOLDS schema",
                        "type": "string"
                    },
                    "POSTCODE_COL": {
                        "default": "Region_Code",
                        "description": "Column name on which normative data is merged with the base data.",
                        "title": "The POSTCODE_COL schema",
                        "type": "string"
                    },
                    "PREDICTION_COL": {
                        "default": "prediction",
                        "description": "The predicted 1/0 output.",
                        "title": "The PREDICTION_COL schema",
                        "type": "string"
                    },
                    "ProtectedAttributeColumn": {
                        "default": "CODE_GENDER",
                        "description": "The protected attribute on which fairness assessment is to be done.",
                        "title": "The ProtectedAttributeColumn schema",
                        "type": "string"
                    },
                    "ProtectedAttributeName": {
                        "default": "CODE_GENDER",
                        "description": "Name assigned to the protected group.",
                        "title": "The ProtectedAttributeName schema",
                        "type": "string"
                    },
                    "SCORE_COL": {
                        "default": "prediction_prob",
                        "description": "Score column, can store the value generated by predict_proba function of the model object.",
                        "title": "The SCORE_COL schema",
                        "type": "string"
                    },
                    "SENSITIVE_COL": {
                        "default": "",
                        "description": "Same as the protected column.",
                        "title": "The SENSITIVE_COL schema",
                        "type": "string"
                    },
                    "SERVICE_ID": {
                        "default": "",
                        "description": "Service ID to specify the required service. Accepted values are threshold_correction, faas_report, normative_report, explainability",
                        "title": "SERVICE_ID",
                        "type": "string"
                    },
                    "TARGET_COL": {
                        "default": "target",
                        "description": "The actual target or Y values.",
                        "title": "The TARGET_COL schema",
                        "type": "string"
                    },
                    "metrics": {
                        "default": "['disparate_impact','equal_opportunity_difference']",
                        "description": "Normative approach metrices.",
                        "title": "The metrics schema",
                        "type": "string"
                    },
                    "privilegedFilter": {
                        "default": "",
                        "description": "An explanation about the purpose of this instance.",
                        "title": "The privilegedFilter schema",
                        "type": "string"
                    },
                    "privilegedValue": {
                        "default": "1",
                        "description": "Value assigned to the privileged group.",
                        "title": "The privilegedValue schema",
                        "type": "string"
                    },
                    "protected_attributes": {
                        "default": "['NoReligion']",
                        "description": "Attribute to be used for running normative data assessment approach.",
                        "title": "The protected_attributes schema",
                        "type": "string"
                    },
                    "unPrivilegedFilter": {
                        "default": "==1",
                        "description": "Logic to filter priviliged group members.",
                        "title": "The unPrivilegedFilter schema",
                        "type": "string"
                    },
                    "unPrivilegedValue": {
                        "default": "0",
                        "description": "Value assigned to the under-privileged group.",
                        "title": "The unPrivilegedValue schema",
                        "type": "string"
                    }
                },
                "required": ["N_DECISION_THRESHOLDS", "POSTCODE_COL", "PREDICTION_COL", "ProtectedAttributeColumn", "ProtectedAttributeName", "SCORE_COL", "SENSITIVE_COL", "SERVICE_ID", "TARGET_COL", "feature_cols", "metrics", "privilegedFilter", "privilegedValue", "protected_attributes", "unPrivilegedFilter", "unPrivilegedValue"],
                "type": "object"
            },
            "outputResponse": {
                "additionalProperties": true,
                "default": {},
                "description": "Response schema",
                "properties": {
                    "requestid": {
                        "default": "",
                        "description": "URL to download the generated output for the specific request id",
                        "title": "The URL schema",
                        "type": "string"
                    }
                },
                "required": ["URL"],
                "title": "Output Response",
                "type": "object"
            },
            "processResponse": {
                "additionalProperties": true,
                "default": {},
                "description": "Response schema",
                "properties": {
                    "requestid": {
                        "default": "",
                        "description": "Requestid - unique reference for the transaction",
                        "title": "The requestid schema",
                        "type": "string"
                    }
                },
                "required": ["requestid"],
                "title": "Process Response",
                "type": "object"
            }
        }
    },
    "info": {
        "contact": {
            "email": "anandakumaran.sellathurai@experian.com"
        },
        "description": "Experian Releases Fairness as a Service on Ascend Intelligence Servicesâ„¢ to its Customers Experian bias assessment tool uses advanced academic and applied research to detect, explain and mitigate potential biases early on in lenders AI risk models",
        "title": "Experian Fairness as a Service (FaaS) API",
        "version": "1.0.0"
    },
    "openapi": "3.0.0",
    "paths": {
        "/api/faas/process": {
            "post": {
                "parameters": [{
                        "description": "Unique reference id for the dataset shared. Contact Experian team to upload data and a requestid.",
                        "in": "header",
                        "name": "requestid",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "in": "header",
                        "name": "X-Authorization",
                        "required": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/faasinput"
                            }
                        }
                    },
                    "description": "faas input object with information about data shared and filters.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/processResponse"
                                }
                            }
                        },
                        "description": "200 response"
                    }
                },
                "summary": "Initiate FaaS process for the shared data.",
                "tags": ["FaaS v1"]
            }
        },
        "/api/faas/report": {
            "get": {
                "parameters": [{
                        "description": "To specify the service for which report is required. Accepted values are threshold_correction, faas_report, normative_report, explainability",
                        "in": "query",
                        "name": "serviceid",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "in": "query",
                        "name": "requestid",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "in": "header",
                        "name": "X-Authorization",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/outputResponse"
                                }
                            },
                            "application/zip": {
                                "schema": {
                                    "$ref": "#/components/schemas/outputResponse"
                                }
                            }
                        },
                        "description": "200 response",
                        "headers": {
                            "content-encoding": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "summary": "get FaaS report by requestid and serviceid",
                "tags": ["FaaS v1"]
            }
        }
    },
    "servers": [{
            "url": "https://api.apixplatform.com/test/api"
        }
    ],
    "tags": [{
            "name": "FaaS v1",
            "description": "APIs to initiate FaaS processing and retrieve report"
        }
    ]
}
